#—------------------------- Наборы (коллекции) ---------------------------#
# () tuple кортеж
# [] list список
# {} set множества
# {} dict словарь (ассоциативный массив)
# range() - диапазон


#—------------------------- list - список --------------------------------#
# [] - Набор значений любого типа данных.
# [1, 5.6, 'Hello', [1, 2, 3], {}, (), None, True, range(1, 3)]
# список == массив (в Python допустимо прировнять)

# Зачем нужен список?
# -> хранит сразу много значений
# -> можно изменить содержимое

# Создание
# list_ = [] # создание пустого списка
# list_num = [5, 10, 213, 89]
# list_str_num = list(('1', '2', '3', '4', '5'))
#
# # Edit - редактирование элементов
# # print(f'list_num[1] = {list_num[1]}') # 10
# # print(f'list_num[2] = {list_num[2]}') # 213
# # list_num[1] = 77 # меняем значение 10 на 77
# # print(f'list_num[1] = {list_num[1]}') # 77
# # print(list_num)
#
# # Add - добавление элементов в список
# '''
#  .appand - добавление в конец списка
#  .insert[] - добавление в любое место
# '''
# print(list_) # [], мы создали пустой список на 19 строке
# # print(list_[0]) # выдаст ошибку: list index out of range
# list_.append(8)
# print(list_)
# print(list_[0])
#
# #-------------------------------------------------------------#
# print('-------------------------------------------------------')
#
# print(list_num)
# list_num.insert(1, 88) # вставка по индексу 1, элемента 88
# print(list_num)
#
# list_num.insert(1111111111, 99) # вставка по крайнему индексу [5], элемента 99
# print(list_num)
# print(list_num[5]) # 99
# print()

#-------------------------------------------------------------#

# Преобразование
# tuple_int = (1, 2, 3, 4) # создали кортеж
# print(tuple_int, type(tuple_int)) # убедились, что это кортеж (неизменяемый массив)
# list_int = list(tuple_int) # преобразовали картеж в список (изменяемый массив)
# print(list_int, type(list_int)) # убедились, что теперь это список

#—----------------------- Задача ------------------------------#
'''
Создайте список из случайных чисел от 1 до 100, размером 10.
'''
# import random   # импортируем модуль random
# nums = []
# for i in range(10):
#     num = random.randint(0, 100)
#     nums.append(num)
#     print(nums)
#
# print(nums)

#—----------------------- Задача ------------------------------#
'''
Посчитать кол-во положительных чисел в списке.
Список сформировать от -100 до 100.
'''
# import random   # импортируем модуль random
# size_list = int(input('Введите размер списка: ')) # вводим размер списка
# count_positive = 0 # счетчик положительных чисел
# nums = [] # создаем пустой список
# for i in range(size_list): # генерируем случайные числа в списке
#     num = random.randint(-100, 100) # генерируем случайное число от -100 до 100
#     if num > 0: # если число больше 0
#         count_positive += 1 # увеличиваем счетчик положительных чисел
#     nums.append(num) # добавляем число в список
#     print(nums) # выводим список каждую итерацию цикла
#
# print(f'Итого: {nums}') # выводим список
# print(f'Кол-во положительных чисел: {count_positive}') # выводим кол-во положительных чисел


# --------------------- Самостоятельная работа ------------------------- #
'''
Дан список целых чисел.
Найти процент отрицательных чисел от общего кол-во чисел.
'''
# nums = [78, -10, -8, 56] # может быть любым
# count_negative = 0
# for i in nums:
#     if i < 0:
#         count_negative += 1
# length = len(nums) # кол-во элементов в списке
# print(f'Отрицательных чисел: {count_negative}, это: {count_negative / length * 100}%')
# print(f'Всего чисел: {length}')

#-------------------------------------------------------------#

'''
Дан список целых чисел.
Найти процент отрицательных чисел от общего кол-во чисел.
Найти сумму первого и последнего элемента списка.
'''
# nums = [78, -10, -8, -1, 56] # может быть любым
# count_negative = 0
# for i in nums:
#     if i < 0:
#         count_negative += 1
# length = len(nums) # кол-во элементов в списке
# print(f'Отрицательных чисел: {count_negative}, это: {count_negative / length * 100}%')
# print(f'Всего чисел: {length}')
# print(f'Содержание списка: {nums}')
# print(f'Сумма первого и последнего элемента списка: {nums[0] + nums[-1]}')

#-------------------------------------------------------------#

'''Дан список 0 (нолей) случайного размера(минимум 1).
0 - место не занято
1 - место занято.
Необходимо посадить гостей через одного, только справа от первого гостя.
Первый гость выбирает желаемый номер места
'''
# print('Ковидные времена вернулись. Сидеть в общественных местах можно строго через одного!')
# seats = [0, 0, 0, 0, 0] # предположим, что это список случайного размера
# for i in range(0, len(seats)): # цикл по каждому элементу списка (от 0 до числа количества элементов в списке)
#     print('index:', i, 'element: ', seats[i]) # отладочный вывод. Выводит индекс и содержание каждого элемента списка
#
# num_seat = int(input(f'Введите номер места 0 - {len(seats)}: ')) # вводим номер (индекс) первого места
#
# # seats.insert(num_seat, 1) # !!! .insert(куда_вставляем, что_вставляем)
# # print(seats)
# for i in range(num_seat, len(seats), 2): # от первого места, до последнего места, с шагом 2
#     seats[i] = 1 # заменяем 0 на 1
# print(seats)

#-------------------------------------------------------------#
'''
Дан список 1 случайного размера(минимум 1). 
Пасхальный кролик должен на каждую 1 принести пасхальное яичко, 
которое заменит 1 на 0.

пример
вход: [1,1,1] 
выход: [0,0,0]

вход: [1] 
выход: [0]
'''

# list_ = [1, 1, 1, 1, 1, 1, 1, 1,] # Список. Может быть любым
# for i in range(len(list_)): # цикл по длине списка
#     print(i, list_[i]) # отладочный вывод. Выводит индекс и содержание каждого элемента списка
#     if list_[i] == 1: # если элемент списка равен 1
#         list_[i] = 0 # заменяем 1 на 0
# print(list_) # выводим список

#----------------------------- Для понимания --------------------------------#
l = [1, 1, 1] # Список. Может быть любым
for i in range(len(l)): # !!! Перебираем индексы. Цикл по длине списка.
    print(f'index: {i}, element: l[{i}] = {l[i]}') # index: 0, element: l[0] = 1 - интересная запись :)

for element in l: # !!! Перебираем элементы. Цикл по списку.
    print(f'element: {element}') # вывод элементов списка

for index, element in enumerate(l): # !!! Перебираем и индексы, и элементы списка.
    print(f'index: {index}, element l[{index}] = {element}') # вывод индексов и элементов списка